html_elements(xpath=xpath_query)
)
}
# Loop over each section
i <- 1
for (i in c(1:1)) {
# Count number of panels in each section
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']")
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
}
# Loop over each section
i <- 1
for (i in c(1:1)) {
# Count number of panels in each section
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']")
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
# Loop over each panel
j <- 1
for (j in c(1:1)) {
# Fetch panel name
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']/label")
}
}
for (j in c(1:1)) {
# Fetch panel name
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']/label")
cat(resp %>%
html_elements(xpath=xpath_query) %>%
html_text2())
}
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
# Loop over each panel
j <- 1
# Loop over each section
i <- 1
for (i in c(1:1)) {
# Count number of panels in each section
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']")
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
# Loop over each panel
j <- 1
for (j in c(1:1)) {
# Fetch panel name
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]/label")
cat(resp %>%
html_elements(xpath=xpath_query) %>%
html_text2())
}
}
# Put together panel and panelists names
data_unit <- data.frame(panelist=panelist, panel=panel)
panelist <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Put together panel and panelists names
data_unit <- data.frame(panelist=panelist, panel=panel)
# Loop over each section
i <- 1
for (i in c(1:1)) {
# Count number of panels in each section
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']")
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
# Loop over each panel
j <- 1
for (j in c(1:1)) {
# Fetch panel name
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]/label")
panel <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Fetch panelists' names
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]//ul/li")
panelist <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Put together panel and panelists names
data_unit <- data.frame(panelist=panelist, panel=panel)
}
}
data_unit
# Loop over each section
i <- 1
for (i in c(1:1)) {
# Count number of panels in each section
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']")
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
# Loop over each panel
j <- 1
for (j in c(1:1)) {
# Fetch panel name
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]/label")
panel <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Fetch panelists' names
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]//ul/li")
panelist <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Put together panel and panelists names
data_unit <- data.frame(panelist=panelist, panel=panel)
# Add panel and panelists names to final data
data <- rbind(data, data_unit)
}
}
# Convert data to tibble
data <- as_tibble(data)
# Add year and url to data
data %<>%
mutate(year=2021, url=url)
# View data
data
# Make empty data frame to collect panel and panelists' names
data <- data.frame(matrix(ncol=2, nrow=0))
names(data) <- c("panelist", "panel")
# Count number of sections
num_sections <- length(resp %>%
html_elements(xpath = "//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons']"))
# Loop over each section
i <- 1
for (i in c(1:num_sections)) {
# Count number of panels in each section
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']")
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
# Loop over each panel
j <- 1
for (j in c(1:num_panels)) {
# Fetch panel name
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]/label")
panel <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Fetch panelists' names
xpath_query <- paste0("//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]//ul/li")
panelist <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Put together panel and panelists names
data_unit <- data.frame(panelist=panelist, panel=panel)
# Add panel and panelists names to final data
data <- rbind(data, data_unit)
}
}
# Convert data to tibble
data <- as_tibble(data)
# Add year and url to data
data %<>%
mutate(year=2021, url=url)
# View data
data
# Save data as csv
write.csv(data, file="data/panelists_2021.csv")
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(rvest)
library(magrittr)
# Settings ----------------------------------------------------------------
setwd("E:/Postgrad Projects/Czech Academy of Science Internship/resfun-panelists-code")
getwd()
rm(list=ls())
# Encode URL
url <- URLencode("https://wayback.webarchiv.cz/wayback/20221024073116/https://gacr.cz/o-ga-cr/poradni-organy/panely/",
reserved = FALSE)
# Fetch html
resp <- read_html(url)
# Make empty data frame to collect panel and panelists' names
data <- data.frame(matrix(ncol=2, nrow=0))
names(data) <- c("panelist", "panel")
# Count number of sections
num_sections <- length(resp %>%
html_elements(xpath = "//h2[text()='Složení hodnoticích panelů']/following::div[@class='accordeons']"))
resp %>%
html_elements(xpath="//h2")
resp %>%
html_elements(xpath = "//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons']")
# Count number of sections
num_sections <- length(resp %>%
html_elements(xpath = "//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons']"))
# Loop over each section
i <- 1
# Loop over each section
i <- 1
for (i in c(1:1)) {
# Count number of panels in each section
xpath_query <- paste0("//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']")
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
# Loop over each panel
j <- 1
for (j in c(1:1)) {
# Fetch panel name
xpath_query <- paste0("//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]/label")
panel <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Fetch panelists' names
xpath_query <- paste0("//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]//ul/li")
panelist <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Put together panel and panelists names
data_unit <- data.frame(panelist=panelist, panel=panel)
# Add panel and panelists names to final data
data <- rbind(data, data_unit)
}
}
# Convert data to tibble
data <- as_tibble(data)
# Add year and url to data
data %<>%
mutate(year=2022, url=url)
# View data
data
# Make empty data frame to collect panel and panelists' names
data <- data.frame(matrix(ncol=2, nrow=0))
names(data) <- c("panelist", "panel")
# Count number of sections
num_sections <- length(resp %>%
html_elements(xpath = "//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons']"))
# Loop over each section
i <- 1
for (i in c(1:num_sections)) {
# Count number of panels in each section
xpath_query <- paste0("//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon']")
num_panels <- length(resp %>%
html_elements(xpath=xpath_query)
)
# Loop over each panel
j <- 1
for (j in c(1:num_panels)) {
# Fetch panel name
xpath_query <- paste0("//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]/label")
panel <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Fetch panelists' names
xpath_query <- paste0("//h2[text()='Členění vědních oborů do hodnoticích panelů']/following::div[@class='accordeons'][", i, "]/div[@class='accordeon'][", j, "]//ul/li")
panelist <- resp %>%
html_elements(xpath=xpath_query) %>%
html_text2()
# Put together panel and panelists names
data_unit <- data.frame(panelist=panelist, panel=panel)
# Add panel and panelists names to final data
data <- rbind(data, data_unit)
}
}
# Convert data to tibble
data <- as_tibble(data)
# Add year and url to data
data %<>%
mutate(year=2022, url=url)
# View data
data
# Save data as csv
write.csv(data, file="data/panelists_2022.csv")
sessionInfo()
# Libraries ---------------------------------------------------------------
library(tidyverse)
packageVersion('tidyverse')
packageVersion('rvest')
packageVersion('magrittr')
package_version("httr2")
package_version(httr2)
library(httr2)
package_version("httr2")
package_version(httr2)
packageVersion("httr2")
packageVersion("rjson")
packageVersion("lubridate")
getwd()
library(here)
install.packages("here")
library(here)
here()
here("data")
install.packages("here", "")
here("data", "")
here("data")
packageVersion(here)
packageVersion("here")
# Libraries ---------------------------------------------------------------
library(tidyverse)
library(magrittr)
library(rvest)
urls <- c(
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=185",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=186",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=187",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=188",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=189",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=191",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=192",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=193",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=194",
"https://wayback.webarchiv.cz/wayback/20081129223741/http://pala.gacr.cas.cz/wordpress/?p=195")
# Iterate over the urls vector
test_html <- urls[1]
html_element("h1") %>%
html_text2()
x %>%
html_element("h1") %>%
html_text2()
cat(x)
map(urls, .f = function (x) {
cat(x)
})
urls
map(urls, .f = function (x) {
cat(x)
})
map_chr(urls, .f = function (x) {
cat(x)
})
urls
cat(x)
map_chr(urls, .f = function (x) {
cat(x)
})
print(x)
map_chr(urls, .f = function () {
cat(x)
})
map_chr(urls, .f = function (x) {
cat(x)
})
my_function <- function(x) {
cat(x)
}
my_function(test_html)
map(test_html, my_function)
cat(x, "\n")
my_function <- function(x) {
cat(x, "\n")
}
my_function(test_html)
map(test_html, my_function)
map(urls, my_function)
paste0(x, "EOL")
my_function <- function(x) {
paste0(x, "EOL")
}
my_function(test_html)
map(urls, my_function)
map_chr(urls, my_function)
test_maped <- map_chr(urls, my_function)
test_maped
my_function <- function(x) {
resp <- read_html(x)
resp %>%
html_element("h1") %>%
html_text2()
}
my_function <- function(x) {
resp <- read_html(x)
title <- resp %>%
html_element("h1") %>%
html_text2()
return(title)
}
my_function(test_html)
# Iterate over the urls vector
test_html <- urls[1]
resp <- read_html(test_html)
resp
resp %>% html_elements("h1")
resp %>% html_elements("h2")
resp %>% html_elements("h3")
resp %>% html_elements(xpath="//body/h1")
resp %>% html_elements(xpath="//body/h2")
resp %>% html_elements(xpath="//body//h2")
resp %>% html_elements(xpath="//body//h1")
resp %>% html_elements(xpath="//body//h4")
resp %>% html_elements(xpath="//div[@class = 'center-widget-title")
resp %>% html_elements(xpath="//div[@class = 'center-widget-title']")
resp %>% html_elements(xpath="//div[@class = 'center-widget-title']") %>%
html_text2()
resp %>% html_elements(xpath="//div[@class = 'center-widget-title']//font") %>%
html_text2()
resp %>% html_elements(xpath="//div[@class = 'center-widget-title']//font")
resp %>% html_elements(xpath="//div[@class = 'center-widget-title']//a")
resp %>% html_elements(xpath="//div[@class = 'center-widget-title']//a//font")
resp %>% html_elements(xpath="//div[@class = 'center-widget-title']//a") %>%
html_text2()
resp %>% html_elements(xpath="//div[@class = 'center-widget-title']//a") %>%
html_text2()
my_function <- function(x) {
resp <- read_html(x)
title <- resp %>% html_elements(xpath="//div[@class = 'center-widget-title']//a") %>%
html_text2()
return(title)
}
my_function(test_html)
test_maped <- map_chr(urls, my_function)
test_maped
# Assign function to extract title given url
my_function <- function(x) {
resp <- read_html(x)
title <- resp %>%
html_elements(xpath="//div[@class = 'center-widget-title']//a") %>%
html_text2()
return(title)
}
Sys.sleep(5)
# Rough
Sys.sleep(rnorm(1, 1, 0.5))
rnorm(10, 1, 0.5)
# Rough
Sys.sleep(rnorm(1, 1, 0.2))
rnorm(10, 1, 0.2)
rnorm(10, 1, 0.2)
rnorm(10, 1, 0.4)
rnorm(10, 1, 0.4)
rnorm(10, 1, 0.4)
rnorm(10, 1, 0.4)
rnorm(10, 1, 0.4)
rnorm(10, 1, 0.4)
rnorm(10, 1, 0.4)
rnorm(10, 1, 0.4)
# Assign function to extract title given url
my_function <- function(x) {
# Fetch html of url
resp <- read_html(x)
# Extract title from html
title <- resp %>%
# Find div with class name 'center-widget-title'
html_elements(xpath="//div[@class = 'center-widget-title']//a") %>%
# Extract its text
html_text2()
# Wait for 1 second approx as the function is to be used iteratively
Sys.sleep(rnorm(1, 1, 0.2))
# Return title text
return(title)
}
# Iterate over urls vector and extract title for each url
titles <- map_chr(urls, my_function)
# View titles
titles
# Extract content
resp <- read_html(test_html)
resp %>%
html_elements(xpath="//div[@class='post-content']/p[1]")
resp %>%
html_elements(xpath="//div[@class='post-content']/p[1]") %>%
html_text2()
# Iterate over urls vector and extract title for each url
test <- map_chr(test_html, my_function)
test
# Iterate over urls vector and extract title for each url
test <- map_df(test_html, my_function)
# Assign function to extract page title and content given url
my_function <- function(x) {
# Fetch html of url
resp <- read_html(x)
# Extract title from html
title <- resp %>%
# Find div with class name 'center-widget-title'
html_elements(xpath="//div[@class = 'center-widget-title']//a") %>%
# Extract its text
html_text2()
# Extract content from html
content <- resp %>%
# Find the first p in the div with class name 'post-content'
html_elements(xpath="//div[@class='post-content']/p[1]") %>%
# Extract its text
html_text2()
# Wait for 1 second approx as the function is to be used iteratively
Sys.sleep(rnorm(1, 1, 0.2))
# Put together the url, title and content in a dataframe
df <- data.frame(url = x, title = title, content = content)
# Return the dataframe
return(df)
}
# Iterate over urls vector and extract title for each url
test <- map(test_html, my_function)
test
test <- as_tibble(test)
test <- as_tibble(test)
test
# Iterate over urls vector and extract title for each url
test <- map_df(test_html, my_function)
test
test <- as_tibble(test)
test
# Iterate over urls vector and extract title for each url
test <- map_df(test_html, my_function)
test
test <- as_tibble(test)
test
test$content[1]
test$title[1]
test$url[1]
test_html_2 <- urls[1:2]
# Iterate over urls vector and extract title for each url
test <- map_df(test_html_2, my_function)
test
test <- as_tibble(test)
test
